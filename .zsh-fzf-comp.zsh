## AUTOGENERATED
## fzf examples - completion
# https://github.com/junegunn/fzf/wiki/Examples-(completion)

_fzf_complete_cdg() {
  ARGS="$@"
  if [[ $ARGS == 'cdg '* ]]; then
    local options="$(git ls-files $(git rev-parse --show-toplevel) | awk -F/ '{OFS="/"; $NF=""; print $0}' | sort -u)"
    _fzf_complete --preview 'tree -C {} | head -200' -- "$@" < <(
      echo $options
    )
  else
    return 1
  fi
}
_fzf_complete_cdw() {
  ARGS="$@"
  if [[ $ARGS == 'cdw '* ]]; then
    local options="$(ls -d ~/workspace/*/)"
    _fzf_complete --preview 'tree -C {} | head -200' -- "$@" < <(
      echo $options
    )
  else
    return 1
  fi
}
_fzf_complete_cdws() {
  ARGS="$@"
  if [[ $ARGS == 'cdws '* ]]; then
    local options="$(ls -d ~/ws/*/)"
    _fzf_complete --preview 'tree -C {} | head -200' -- "$@" < <(
      echo $options
    )
  else
    return 1
  fi
}
_fzf_complete_brew() {
  ARGS="$@"
  if [[ $ARGS == 'brew install --cask '* ]]; then
    local options="$(cache_fzf.js "brew install --cask")"
    _fzf_complete --multi --preview 'brew info --cask {}' -- "$@" < <(
      echo $options
    )
  elif [[ $ARGS == 'brew install '* ]]; then
    local options="$(cache_fzf.js "brew install")"
    _fzf_complete --multi --preview 'brew info {}' -- "$@" < <(
      echo $options
    )
  elif [[ $ARGS == 'brew uninstall --cask '* ]]; then
    local options="$(brew list --cask)"
    _fzf_complete --multi --preview 'brew info --cask {}' -- "$@" < <(
      echo $options
    )
  elif [[ $ARGS == 'brew uninstall '* ]]; then
    local options="$(brew list --formula)"
    _fzf_complete --multi --preview 'brew info {}' -- "$@" < <(
      echo $options
    )
  else
    return 1
  fi
}
_fzf_complete_pip() {
  ARGS="$@"
  if [[ $ARGS == 'pip uninstall'* ]]; then
    local options="$(pip list 2> /dev/null | tail -n +3 | awk '{print $1}' | rg -v '^(setuptools|wheel)$')"
    _fzf_complete --multi --preview 'pip show {}' -- "$@" < <(
      echo $options
    )
  else
    return 1
  fi
}
_fzf_complete_docker() {
  ARGS="$@"
  if [[ $ARGS == 'docker rm '* ]]; then
    local options="$(docker ps -a)"
    _fzf_complete --multi -- "$@" < <(
      echo $options
    )
  elif [[ $ARGS == 'docker image rm '* ]]; then
    local options="$(docker images -a)"
    _fzf_complete --multi -- "$@" < <(
      echo $options
    )
  elif [[ $ARGS == 'docker volume rm '* ]]; then
    local options="$(docker volume ls)"
    _fzf_complete --multi -- "$@" < <(
      echo $options
    )
  else
    return 1
  fi
}
_fzf_complete_docker_post() {
  if [[ $ARGS == 'docker rm '* ]]; then
    awk '{print $1}'
  elif [[ $ARGS == 'docker image rm '* ]]; then
    awk '{print $3}'
  elif [[ $ARGS == 'docker volume rm '* ]]; then
    awk '{print $2}'
  else
    return 1
  fi
}
_fzf_complete_gulp() {
  ARGS="$@"
  if [[ $ARGS == 'gulp '* ]]; then
    local options="$(cache_fzf.js 'gulp')"
    _fzf_complete --multi -- "$@" < <(
      echo $options
    )
  else
    return 1
  fi
}